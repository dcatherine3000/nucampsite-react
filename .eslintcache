[{"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"2","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"12","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"17","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"18","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"19","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"20","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"21","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"22","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"23","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"24","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":695,"mtime":1609171841410,"results":"26","hashOfConfig":"27"},{"size":568,"mtime":1609861212756,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1608513188732,"results":"29","hashOfConfig":"27"},{"size":2021,"mtime":1610478955905,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1610121758741,"results":"31","hashOfConfig":"27"},{"size":6884,"mtime":1610478965542,"results":"32","hashOfConfig":"27"},{"size":3463,"mtime":1610478730870,"results":"33","hashOfConfig":"27"},{"size":4968,"mtime":1610210737033,"results":"34","hashOfConfig":"27"},{"size":1915,"mtime":1609175783538,"results":"35","hashOfConfig":"27"},{"size":1503,"mtime":1610478973095,"results":"36","hashOfConfig":"27"},{"size":11702,"mtime":1610384999080,"results":"37","hashOfConfig":"27"},{"size":4243,"mtime":1609257000305,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1609257009432,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1609257019345,"results":"40","hashOfConfig":"27"},{"size":4037,"mtime":1609857150811,"results":"41","hashOfConfig":"27"},{"size":790,"mtime":1610384459566,"results":"42","hashOfConfig":"27"},{"size":609,"mtime":1610383737608,"results":"43","hashOfConfig":"27"},{"size":182,"mtime":1610333437708,"results":"44","hashOfConfig":"27"},{"size":670,"mtime":1610478418884,"results":"45","hashOfConfig":"27"},{"size":600,"mtime":1610478574856,"results":"46","hashOfConfig":"27"},{"size":3433,"mtime":1610480865073,"results":"47","hashOfConfig":"27"},{"size":447,"mtime":1610477700952,"results":"48","hashOfConfig":"27"},{"size":234,"mtime":1610382370704,"results":"49","hashOfConfig":"27"},{"size":166,"mtime":1610384391934,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1610477618096,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1e4ryk7",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["107","108"],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],["109","110"],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["111","112","113"],"import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, Container, Row, Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst minLength = len => val => val && (val.length >= len);\nconst maxLength = len => val => !val || (val.length <= len);\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super (props);\n\n        this.state = {\n            isModalOpen: false,\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.addComment(this.props.campsiteId, values.rating, values.author, values.text);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <div className=\"form-group\">    \n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select\n                                    model=\".rating\"\n                                    name=\"rating\"\n                                    id=\"rating\"\n                                    className=\"form-control\">\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                </Control.select>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text\n                                    model=\".author\"\n                                    name=\"author\"\n                                    id=\"author\"\n                                    placeholder=\"Your Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        minLength: minLength(2),\n                                        maxLength: maxLength(15)\n                                    }} \n                                />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".author\"\n                                    show=\"touched\"\n                                    component=\"div\"\n                                    messages={{\n                                        minLength: 'Must be at least 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }} \n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\">Comment</Label>\n                                <Control.textarea\n                                    model=\".text\"\n                                    name=\"text\"\n                                    id=\"text\"\n                                    rows=\"6\"\n                                    className=\"form-control\" \n                                />\n                            </div>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n                <Button type=\"submit\" onClick={this.toggleModal} outline><i className=\"fa fa-pencil fa-lg\" /> Submit Comment</Button>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction RenderCampsite({campsite}) {\n    return (\n        <div className=\"col-md-5 m-1\">\n            <Card>\n                <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n                <CardBody>\n                    <CardText>{campsite.description}</CardText>\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nfunction RenderComments({comments, addComment, campsiteId}) {\n    if (comments) {\n        return (\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                {comments.map(comment => <div key={comment.id} className=\"mb-2\">\n                    <p>{comment.text}<br/>\n                        &mdash; {comment.author} {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\n                    </p>\n                    </div>)}\n                    <CommentForm campsiteId={campsiteId} addComment={addComment}/>\n            </div>\n        );\n    }\n    return <div><CommentForm /></div>;\n}\n\nfunction CampsiteInfo(props) {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    const campsite = props.campsite;\n    if (campsite) {\n        return (\n            <Container>\n                <Row>\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/directory'>Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </Row>\n                <Row>\n                    <RenderCampsite campsite={props.campsite} />\n                    <RenderComments \n                        comments={props.comments}\n                        addComment={props.addComment}\n                        campsiteId={props.campsite.id} \n                    />\n                </Row>\n            </Container>\n        );\n    }\n    return <div />\n}\n\n\nexport default CampsiteInfo;","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["114","115","116","117","118","119","120","121"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\nconst required = val => val && val.length; \nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n    }\n\n    handleSubmit(values) {\n        console.log('Current state is: ' + JSON.stringify(values));\n        alert('Current state is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text \n                                        model=\".firstName\" \n                                        id=\"firstName\" \n                                        name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text \n                                        model=\".lastName\" \n                                        id=\"lastName\" \n                                        name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>                        \n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text \n                                        model=\".phoneNum\" \n                                        id=\"phoneNum\" \n                                        name=\"phoneNum\" \n                                        placeholder=\"Phone number\" \n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text \n                                        model=\".email\" \n                                        id=\"email\" \n                                        name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select \n                                        model=\".contactType\" \n                                        name=\"contactType\" \n                                        className=\"form-control\"\n                                    >\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea \n                                        model=\".feedback\" \n                                        id=\"feedback\" \n                                        name=\"feedback\" \n                                        rows=\"12\" \n                                        className=\"form-control\" \n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],["122","123"],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/Users/darianwohlrabe/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"128"},{"ruleId":"126","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":42,"column":33,"nodeType":"132","endLine":46,"endColumn":62},{"ruleId":"130","severity":1,"message":"133","line":56,"column":33,"nodeType":"132","endLine":66,"endColumn":35},{"ruleId":"130","severity":1,"message":"134","line":80,"column":33,"nodeType":"132","endLine":86,"endColumn":35},{"ruleId":"135","severity":1,"message":"136","line":4,"column":33,"nodeType":"137","messageId":"138","endLine":4,"endColumn":40},{"ruleId":"130","severity":1,"message":"133","line":79,"column":37,"nodeType":"132","endLine":90,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":107,"column":37,"nodeType":"132","endLine":118,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":135,"column":37,"nodeType":"132","endLine":147,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":165,"column":37,"nodeType":"132","endLine":175,"endColumn":39},{"ruleId":"130","severity":1,"message":"139","line":192,"column":45,"nodeType":"132","endLine":196,"endColumn":47},{"ruleId":"130","severity":1,"message":"131","line":202,"column":37,"nodeType":"132","endLine":206,"endColumn":38},{"ruleId":"130","severity":1,"message":"134","line":215,"column":37,"nodeType":"132","endLine":221,"endColumn":39},{"ruleId":"124","replacedBy":"140"},{"ruleId":"126","replacedBy":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],["142"],["143"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["142"],["143"],"no-global-assign","no-unsafe-negation"]